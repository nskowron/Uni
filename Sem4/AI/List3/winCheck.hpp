#ifndef WINCHECK_HPP
#define WINCHECK_HPP

#include "board.hpp"

extern short board[5][5];

constexpr short win[28][4][2] = {
  { {0, 0}, {0, 1}, {0, 2}, {0, 3} },
  { {1, 0}, {1, 1}, {1, 2}, {1, 3} },
  { {2, 0}, {2, 1}, {2, 2}, {2, 3} },
  { {3, 0}, {3, 1}, {3, 2}, {3, 3} },
  { {4, 0}, {4, 1}, {4, 2}, {4, 3} },
  { {0, 1}, {0, 2}, {0, 3}, {0, 4} },
  { {1, 1}, {1, 2}, {1, 3}, {1, 4} },
  { {2, 1}, {2, 2}, {2, 3}, {2, 4} },
  { {3, 1}, {3, 2}, {3, 3}, {3, 4} },
  { {4, 1}, {4, 2}, {4, 3}, {4, 4} },
  { {0, 0}, {1, 0}, {2, 0}, {3, 0} },
  { {0, 1}, {1, 1}, {2, 1}, {3, 1} },
  { {0, 2}, {1, 2}, {2, 2}, {3, 2} },
  { {0, 3}, {1, 3}, {2, 3}, {3, 3} },
  { {0, 4}, {1, 4}, {2, 4}, {3, 4} },
  { {1, 0}, {2, 0}, {3, 0}, {4, 0} },
  { {1, 1}, {2, 1}, {3, 1}, {4, 1} },
  { {1, 2}, {2, 2}, {3, 2}, {4, 2} },
  { {1, 3}, {2, 3}, {3, 3}, {4, 3} },
  { {1, 4}, {2, 4}, {3, 4}, {4, 4} },
  { {0, 1}, {1, 2}, {2, 3}, {3, 4} },
  { {0, 0}, {1, 1}, {2, 2}, {3, 3} },
  { {1, 1}, {2, 2}, {3, 3}, {4, 4} },
  { {1, 0}, {2, 1}, {3, 2}, {4, 3} },
  { {0, 3}, {1, 2}, {2, 1}, {3, 0} },
  { {0, 4}, {1, 3}, {2, 2}, {3, 1} },
  { {1, 3}, {2, 2}, {3, 1}, {4, 0} },
  { {1, 4}, {2, 3}, {3, 2}, {4, 1} }
};

constexpr short lose[48][3][2] = {
  { {0, 0}, {0, 1}, {0, 2} }, { {0, 1}, {0, 2}, {0, 3} }, { {0, 2}, {0, 3}, {0, 4} },
  { {1, 0}, {1, 1}, {1, 2} }, { {1, 1}, {1, 2}, {1, 3} }, { {1, 2}, {1, 3}, {1, 4} },
  { {2, 0}, {2, 1}, {2, 2} }, { {2, 1}, {2, 2}, {2, 3} }, { {2, 2}, {2, 3}, {2, 4} },
  { {3, 0}, {3, 1}, {3, 2} }, { {3, 1}, {3, 2}, {3, 3} }, { {3, 2}, {3, 3}, {3, 4} },
  { {4, 0}, {4, 1}, {4, 2} }, { {4, 1}, {4, 2}, {4, 3} }, { {4, 2}, {4, 3}, {4, 4} },
  { {0, 0}, {1, 0}, {2, 0} }, { {1, 0}, {2, 0}, {3, 0} }, { {2, 0}, {3, 0}, {4, 0} },
  { {0, 1}, {1, 1}, {2, 1} }, { {1, 1}, {2, 1}, {3, 1} }, { {2, 1}, {3, 1}, {4, 1} },
  { {0, 2}, {1, 2}, {2, 2} }, { {1, 2}, {2, 2}, {3, 2} }, { {2, 2}, {3, 2}, {4, 2} },
  { {0, 3}, {1, 3}, {2, 3} }, { {1, 3}, {2, 3}, {3, 3} }, { {2, 3}, {3, 3}, {4, 3} },
  { {0, 4}, {1, 4}, {2, 4} }, { {1, 4}, {2, 4}, {3, 4} }, { {2, 4}, {3, 4}, {4, 4} },
  { {0, 2}, {1, 3}, {2, 4} }, { {0, 1}, {1, 2}, {2, 3} }, { {1, 2}, {2, 3}, {3, 4} },
  { {0, 0}, {1, 1}, {2, 2} }, { {1, 1}, {2, 2}, {3, 3} }, { {2, 2}, {3, 3}, {4, 4} },
  { {1, 0}, {2, 1}, {3, 2} }, { {2, 1}, {3, 2}, {4, 3} }, { {2, 0}, {3, 1}, {4, 2} },
  { {0, 2}, {1, 1}, {2, 0} }, { {0, 3}, {1, 2}, {2, 1} }, { {1, 2}, {2, 1}, {3, 0} },
  { {0, 4}, {1, 3}, {2, 2} }, { {1, 3}, {2, 2}, {3, 1} }, { {2, 2}, {3, 1}, {4, 0} },
  { {1, 4}, {2, 3}, {3, 2} }, { {2, 3}, {3, 2}, {4, 1} }, { {2, 4}, {3, 3}, {4, 2} }
};

inline bool winCheck(int player) {
  bool w = false;
  for (int i = 0; i < 28; i++)
    if ( (board[win[i][0][0]][win[i][0][1]] == player) &&
         (board[win[i][1][0]][win[i][1][1]] == player) &&
         (board[win[i][2][0]][win[i][2][1]] == player) &&
         (board[win[i][3][0]][win[i][3][1]] == player) )
      w = true;
  return w;
}

inline bool loseCheck(int player) {
  bool l = false;
  for (int i = 0; i < 48; i++)
    if ( (board[lose[i][0][0]][lose[i][0][1]] == player) &&
         (board[lose[i][1][0]][lose[i][1][1]] == player) &&
         (board[lose[i][2][0]][lose[i][2][1]] == player) )
      l = true;
  return l;
}

#endif // WINCHECK_HPP