@startuml class
skinparam classAttributeIconSize 0
class LibraryDataHandler{
+ {abstract} addNewBook(book : Book) : int
+ {abstract} addNewCustomer(customer : Customer) : int
+ {abstract} updateBook(ID : int, updatedBook : Book) : void
+ {abstract} updateCustomer(ID : int, updatedCustomer : Customer) : void
+ {abstract} getBook(ID : int) : Book
+ {abstract} getBooks(title : String) : List<Book>
+ {abstract} getBooks() : List<Book>
+ {abstract} getTitles(title : String) : List<Book>
+ {abstract} getTitles() : List<Book>
+ {abstract} getCustomer(ID : int) : Customer
+ {abstract} getCustomerByEmail(email : String) : Customer
+ borrowBook(customer : Customer, book : Book) : void
+ returnBook(book : Book) : void
}
LibraryDataHandler "1" -- "*" Customer
LibraryDataHandler "1" -- "*" Book
class Customer{
- ID : int
- name : String
- lastName : String
- email : String
- books : List<Book>
+ Customer(ID : int, name : String, lastName : String, email : String, books : List<Book>)
+ Customer(name : String, lastName : String, email : String)
+ getID() : int
+ getName() : String
+ getLastName() : String
+ getEmail() : String
+ getBooks() : List<Book>
+ borrowBook(book : Book) : void
+ returnBook(book : Book) : void
+ equals(obj : Object) : boolean
+ hashCode() : int
}
Customer "1" -- "*" Book
class UI{
- running : AtomicBoolean
- choices : Map<String,Runnable>
+ UI(library : LibraryDataHandler)
+ run() : void
}
UI --> LibraryDataHandler
class Library{
- Library()
+ {static} main(args : String[]) : void
}
Library --> UI
Library --> LibraryDataHandler
class Book{
- ID : int
- title : String
- author : String
- available : boolean
- ownerID : int
+ Book(ID : int, title : String, author : String, available : boolean, ownerID : int)
+ Book(title : String, author : String)
+ getID() : int
+ getTitle() : String
+ getAuthor() : String
+ isAvailable() : boolean
+ getOwnerID() : int
+ borrowBook(customerID : int) : void
+ returnBook() : void
+ equals(obj : Object) : boolean
+ hashCode() : int
}
class LibraryDataHandler_Mimic{
- books : List<Book>
- customers : List<Customer>
+ LibraryDataHandler_Mimic()
+ addNewBook(book : Book) : int
+ addNewCustomer(customer : Customer) : int
+ updateBook(ID : int, updatedBook : Book) : void
+ updateCustomer(ID : int, updatedCustomer : Customer) : void
+ getBook(ID : int) : Book
+ getBooks(title : String) : List<Book>
+ getBooks() : List<Book>
+ getTitles(title : String) : List<Book>
+ getTitles() : List<Book>
+ getCustomer(ID : int) : Customer
+ getCustomerByEmail(email : String) : Customer
}
LibraryDataHandler_Mimic --|> LibraryDataHandler
@enduml